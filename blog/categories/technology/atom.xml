<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: technology | Yuriy Dybskiy]]></title>
  <link href="http://dybskiy.com/blog/categories/technology/atom.xml" rel="self"/>
  <link href="http://dybskiy.com/"/>
  <updated>2014-03-26T15:38:40-07:00</updated>
  <id>http://dybskiy.com/</id>
  <author>
    <name><![CDATA[Yuriy Dybskiy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Why most mobile apps suck or 'What mobile web devs can learn from game devs']]></title>
    <link href="http://dybskiy.com/technology/why-most-mobile-apps-suck-or-what-mobile-devs-can-learn-from-game-devs/"/>
    <updated>2012-07-26T00:00:00-07:00</updated>
    <id>http://dybskiy.com/technology/why-most-mobile-apps-suck-or-what-mobile-devs-can-learn-from-game-devs</id>
    <content type="html"><![CDATA[<p><em>Thanks for all the attention this post got on reddit! You guys rock! That's some 6,584 rocking people :) <a href="http://www.reddit.com/r/programming/comments/x9c8m/why_most_mobile_apps_suck_or_what_mobile_web_devs/">Join the discussion</a>.</em></p>

<p>I've been arguing recently with a few folks that the reason Facebook mobile apps suck isn't because they chose HTML5 blend over pure native but rather due to poor execution on their side.</p>

<p>There were a bunch of articles written to support both sides but arguing about it isn't really productive, is it? Last night I read an amazing article by <a title="Patrick Wyatt" href="http://www.codeofhonor.com/blog/author/patrick-wyatt">Patrick Wyatt</a> – <a title="The making of Warcraft part 1" href="http://www.codeofhonor.com/blog/the-making-of-warcraft-part-1" rel="bookmark">The making of Warcraft part 1</a>. I hope you played Warcraft or at least Warcraft 2.</p>

<p>The problems outlined there make our today's hurtles laughable. Fitting a game into 640Kb of memory, code versioning via "remembering which files are changed on that floppy disk", huge multiplayer latencies.</p>

<p>We are spoiled these days and some of us got too comfy thinking 3G and LTE can solve all those latency problems for you. The real answer to the problems with most mobile apps these days (including Facebook's) is Patrick's another great article – <a title="Reducing perceived latency" href="http://www.codeofhonor.com/blog/reducing-perceived-latency" rel="bookmark">Reducing perceived latency</a> and Mike Krieger's (Instagram) – <a href="https://speakerdeck.com/u/mikeyk/p/secrets-to-lightning-fast-mobile-design?slide=1">Secrets to Lightning Fast Mobile Design</a> slide deck.</p>

<p>Slide 25 sums it up nicely in three 'easy' steps:</p>

<ol>
<li>perform actions optimistically</li>
<li>adaptively pre-load content</li>
<li>move bits when no-one's watching</li>
</ol>


<p>The later two are pretty self-explanatory, but I'd like to elaborate a bit more on the first one. First time I saw it I assumed it ment optimizations, but what it really means is optimism.</p>

<p>Be optimistic about the and make the user feel productive. Here's one of the slides:</p>

<p style="text-align: center;"><img class="aligncenter  wp-image-318" title="Secrets to Lightning Fast Mobile Design – Slide 34" src="http://dybskiy.com/wp-content/uploads/2012/07/Instagram-slide-34.png" alt="" width="789" height="760" /></p>


<p>Just like Ogre in Warcraft would say “Daboo” once you command to move, it didn't really mean that all the requests had finished. It was a simple acknowledgment for the user that we got your command.</p>

<p>What if the request fails? Notify user unobtrusively:</p>

<p style="text-align: center;"><img class="aligncenter  wp-image-320" title="Slide 38" src="http://dybskiy.com/wp-content/uploads/2012/07/Slide-38.png" alt="" width="272" height="381" /></p>


<p>At the end of the day, choosing tools you use is important but much more important is how you use them.</p>

<p>In light of some Vancouver game studios shutting down I don't think people need to be worried – it could be great for many companies if a game dev joined them.</p>

<p>So if you are a dev looking for work in Vancouver – get in touch with <a href="http://twitter.com/bmann/">Boris Mann</a> or <a href="http://twitter.com/igorskee/">Igor Faletski</a>. They helped me find <a href="https://twitter.com/unbounce">Unbounce</a> team and I can't recommend them enough.</p>

<p>If you read this far, follow me on twitter – <a href="http://twitter.com/dybskiy/">@dybskiy</a></p>

<p>Thanks to sidcool1234 for submitting to <a href="http://www.reddit.com/r/programming/comments/x9c8m/why_most_mobile_apps_suck_or_what_mobile_web_devs/">reddit</a>.</p>

<p><strong>Update 1:</strong> reddit reader <a href="http://www.reddit.com/user/barsoap">barsoap</a> pointed out the following:</p>

<blockquote>There's one keyword here: <em>Immersion</em>.

Immersion breakers kill every game, and while break of workflow might not kill an application, it's definitely going to make it suck.

The difference in game vs. app developers here is that game developers focus on immersion from the get-go, even design their games around it, while app developers start off with a set of functionality and, at least hopefully, consider immersion as an afterthought.

Do you remember Kai Krause's early work, such as Kai's Photo Soap? Those were designed around immersion, not functionality.</blockquote>

]]></content>
  </entry>
  
</feed>
